//¼ÇÒä»¯dp Í¨Åä·û 
#include<iostream>
#include <algorithm>
#include <string.h>
using namespace std;
// thelordoftherings  t*l?*o*r?ng*s

bool match(const string& w, const string& s)
{
    cout<<w<<" "<<s<<endl;
    int pos = 0;
    while(pos<w.size() && pos<s.size() && (w[pos]=='?'
          || w[pos]==s[pos]))
    {
        pos++;
    }
    if(pos == w.size())
    {
        return pos == s.size();
    }
    if(w[pos] == '*')
    {
        for(int skip=0; skip+pos<=s.size(); skip++)
        {
            if(match(w.substr(pos+1),s.substr(pos+skip)))
            {
                return true;
            }
        }
    }
    return false;
}
int cache[101][101];
string S = "aaaab";//"thelordoftherings";
string W = "**a";//"t*l?*o*r?ng*s";
bool mem_match(int w,int s)
{
    int& ret = cache[w][s];
    if(ret != -1)
        return ret;
    if(w<W.size() && s<S.size())
        cout<<W.substr(w)<<" "<<S.substr(s)<<endl;
    while(w<W.size() && s<S.size() && (W[w]=='?'
          || W[w]==S[s]))
    {
        w++;s++;
    }
    if(w == W.size())
    {
        return ret = (s == S.size());
    }
    if(W[w] == '*')
    {
        for(int skip=0; skip+w<S.size(); skip++)
        {
            if(mem_match(w+1,s+skip))
            {
                return ret = 1;
            }
        }
    }
    return ret = 0;
}
int main()
{
    //cout<<match(w,s);
    memset(cache, -1, sizeof(cache));
    cout<<mem_match(0,0);
    return 0;

}
